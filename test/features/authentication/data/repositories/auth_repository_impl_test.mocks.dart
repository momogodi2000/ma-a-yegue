// Mocks generated by Mockito 5.4.5 from annotations
// in maa_yegue/test/features/authentication/data/repositories/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:connectivity_plus/connectivity_plus.dart' as _i10;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i11;
import 'package:maa_yegue/core/sync/general_sync_manager.dart' as _i4;
import 'package:maa_yegue/core/sync/sync_operation.dart' as _i12;
import 'package:maa_yegue/features/authentication/data/datasources/auth_local_datasource.dart'
    as _i8;
import 'package:maa_yegue/features/authentication/data/datasources/auth_remote_datasource.dart'
    as _i5;
import 'package:maa_yegue/features/authentication/data/models/auth_response_model.dart'
    as _i2;
import 'package:maa_yegue/features/authentication/data/models/user_model.dart'
    as _i3;
import 'package:maa_yegue/features/authentication/domain/entities/user_entity.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthResponseModel_0 extends _i1.SmartFake
    implements _i2.AuthResponseModel {
  _FakeAuthResponseModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_1 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSyncResult_2 extends _i1.SmartFake implements _i4.SyncResult {
  _FakeSyncResult_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i5.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<_i3.UserModel?> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i6.Stream<_i3.UserModel?>.empty(),
      ) as _i6.Stream<_i3.UserModel?>);

  @override
  _i6.Future<_i2.AuthResponseModel> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i6.Future<_i2.AuthResponseModel>.value(_FakeAuthResponseModel_0(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i2.AuthResponseModel>);

  @override
  _i6.Future<_i2.AuthResponseModel> signUpWithEmailAndPassword(
    String? email,
    String? password,
    String? displayName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithEmailAndPassword,
          [
            email,
            password,
            displayName,
          ],
        ),
        returnValue:
            _i6.Future<_i2.AuthResponseModel>.value(_FakeAuthResponseModel_0(
          this,
          Invocation.method(
            #signUpWithEmailAndPassword,
            [
              email,
              password,
              displayName,
            ],
          ),
        )),
      ) as _i6.Future<_i2.AuthResponseModel>);

  @override
  _i6.Future<_i2.AuthResponseModel> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue:
            _i6.Future<_i2.AuthResponseModel>.value(_FakeAuthResponseModel_0(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
      ) as _i6.Future<_i2.AuthResponseModel>);

  @override
  _i6.Future<_i2.AuthResponseModel> signInWithFacebook() => (super.noSuchMethod(
        Invocation.method(
          #signInWithFacebook,
          [],
        ),
        returnValue:
            _i6.Future<_i2.AuthResponseModel>.value(_FakeAuthResponseModel_0(
          this,
          Invocation.method(
            #signInWithFacebook,
            [],
          ),
        )),
      ) as _i6.Future<_i2.AuthResponseModel>);

  @override
  _i6.Future<_i2.AuthResponseModel> signInWithApple() => (super.noSuchMethod(
        Invocation.method(
          #signInWithApple,
          [],
        ),
        returnValue:
            _i6.Future<_i2.AuthResponseModel>.value(_FakeAuthResponseModel_0(
          this,
          Invocation.method(
            #signInWithApple,
            [],
          ),
        )),
      ) as _i6.Future<_i2.AuthResponseModel>);

  @override
  _i6.Future<String> signInWithPhoneNumber(String? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [phoneNumber],
        ),
        returnValue: _i6.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [phoneNumber],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<_i2.AuthResponseModel> verifyPhoneNumber(
    String? verificationId,
    String? smsCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [
            verificationId,
            smsCode,
          ],
        ),
        returnValue:
            _i6.Future<_i2.AuthResponseModel>.value(_FakeAuthResponseModel_0(
          this,
          Invocation.method(
            #verifyPhoneNumber,
            [
              verificationId,
              smsCode,
            ],
          ),
        )),
      ) as _i6.Future<_i2.AuthResponseModel>);

  @override
  _i6.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.UserModel?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i6.Future<_i3.UserModel?>.value(),
      ) as _i6.Future<_i3.UserModel?>);

  @override
  _i6.Future<bool> isAuthenticated() => (super.noSuchMethod(
        Invocation.method(
          #isAuthenticated,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> sendPasswordResetEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [email],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.UserModel> updateUserProfile(_i3.UserModel? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [user],
        ),
        returnValue: _i6.Future<_i3.UserModel>.value(_FakeUserModel_1(
          this,
          Invocation.method(
            #updateUserProfile,
            [user],
          ),
        )),
      ) as _i6.Future<_i3.UserModel>);

  @override
  _i6.Future<void> deleteUserAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteUserAccount,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i8.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i9.UserEntity?> getCachedUser() => (super.noSuchMethod(
        Invocation.method(
          #getCachedUser,
          [],
        ),
        returnValue: _i6.Future<_i9.UserEntity?>.value(),
      ) as _i6.Future<_i9.UserEntity?>);

  @override
  _i6.Future<void> cacheUser(_i9.UserEntity? user) => (super.noSuchMethod(
        Invocation.method(
          #cacheUser,
          [user],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearCachedUser() => (super.noSuchMethod(
        Invocation.method(
          #clearCachedUser,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearAuthData() => (super.noSuchMethod(
        Invocation.method(
          #clearAuthData,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> isUserLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isUserLoggedIn,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<String?> getCachedUserId() => (super.noSuchMethod(
        Invocation.method(
          #getCachedUserId,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> cacheUserId(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #cacheUserId,
          [userId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i10.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<_i11.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i6.Stream<_i11.ConnectivityResult>.empty(),
      ) as _i6.Stream<_i11.ConnectivityResult>);

  @override
  _i6.Future<_i11.ConnectivityResult> checkConnectivity() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkConnectivity,
          [],
        ),
        returnValue: _i6.Future<_i11.ConnectivityResult>.value(
            _i11.ConnectivityResult.bluetooth),
      ) as _i6.Future<_i11.ConnectivityResult>);
}

/// A class which mocks [GeneralSyncManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeneralSyncManager extends _i1.Mock
    implements _i4.GeneralSyncManager {
  MockGeneralSyncManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<_i4.SyncStatusType> get syncStatusStream => (super.noSuchMethod(
        Invocation.getter(#syncStatusStream),
        returnValue: _i6.Stream<_i4.SyncStatusType>.empty(),
      ) as _i6.Stream<_i4.SyncStatusType>);

  @override
  void startAutoSync() => super.noSuchMethod(
        Invocation.method(
          #startAutoSync,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopAutoSync() => super.noSuchMethod(
        Invocation.method(
          #stopAutoSync,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> queueOperation(_i12.SyncOperation? operation) =>
      (super.noSuchMethod(
        Invocation.method(
          #queueOperation,
          [operation],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i4.SyncResult> sync() => (super.noSuchMethod(
        Invocation.method(
          #sync,
          [],
        ),
        returnValue: _i6.Future<_i4.SyncResult>.value(_FakeSyncResult_2(
          this,
          Invocation.method(
            #sync,
            [],
          ),
        )),
      ) as _i6.Future<_i4.SyncResult>);

  @override
  _i6.Future<int> getPendingOperationsCount() => (super.noSuchMethod(
        Invocation.method(
          #getPendingOperationsCount,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<void> clearCompletedOperations() => (super.noSuchMethod(
        Invocation.method(
          #clearCompletedOperations,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
