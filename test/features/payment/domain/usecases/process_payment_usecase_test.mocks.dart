// Mocks generated by Mockito 5.4.5 from annotations
// in maa_yegue/test/features/payment/domain/usecases/process_payment_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:maa_yegue/core/errors/failures.dart' as _i5;
import 'package:maa_yegue/features/payment/domain/entities/payment_entity.dart'
    as _i6;
import 'package:maa_yegue/features/payment/domain/entities/subscription_entity.dart'
    as _i7;
import 'package:maa_yegue/features/payment/domain/repositories/payment_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PaymentRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentRepository extends _i1.Mock implements _i3.PaymentRepository {
  MockPaymentRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PaymentEntity>> processPayment({
    required String? userId,
    required double? amount,
    required String? method,
    required String? phoneNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #processPayment,
          [],
          {
            #userId: userId,
            #amount: amount,
            #method: method,
            #phoneNumber: phoneNumber,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.PaymentEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.PaymentEntity>(
          this,
          Invocation.method(
            #processPayment,
            [],
            {
              #userId: userId,
              #amount: amount,
              #method: method,
              #phoneNumber: phoneNumber,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.PaymentEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PaymentEntity>> getPaymentStatus(
          String? paymentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentStatus,
          [paymentId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.PaymentEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.PaymentEntity>(
          this,
          Invocation.method(
            #getPaymentStatus,
            [paymentId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.PaymentEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.PaymentEntity>>>
      getPaymentHistory(String? userId) => (super.noSuchMethod(
            Invocation.method(
              #getPaymentHistory,
              [userId],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.PaymentEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.PaymentEntity>>(
              this,
              Invocation.method(
                #getPaymentHistory,
                [userId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.PaymentEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i7.SubscriptionEntity>> createSubscription({
    required String? userId,
    required String? planId,
    required String? planName,
    required double? price,
    required String? interval,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSubscription,
          [],
          {
            #userId: userId,
            #planId: planId,
            #planName: planName,
            #price: price,
            #interval: interval,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.SubscriptionEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.SubscriptionEntity>(
          this,
          Invocation.method(
            #createSubscription,
            [],
            {
              #userId: userId,
              #planId: planId,
              #planName: planName,
              #price: price,
              #interval: interval,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.SubscriptionEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.SubscriptionEntity?>>
      getUserSubscription(String? userId) => (super.noSuchMethod(
            Invocation.method(
              #getUserSubscription,
              [userId],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, _i7.SubscriptionEntity?>>.value(
                _FakeEither_0<_i5.Failure, _i7.SubscriptionEntity?>(
              this,
              Invocation.method(
                #getUserSubscription,
                [userId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i7.SubscriptionEntity?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.SubscriptionEntity>>
      cancelSubscription(String? subscriptionId) => (super.noSuchMethod(
            Invocation.method(
              #cancelSubscription,
              [subscriptionId],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, _i7.SubscriptionEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.SubscriptionEntity>(
              this,
              Invocation.method(
                #cancelSubscription,
                [subscriptionId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i7.SubscriptionEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<Map<String, dynamic>>>>
      getSubscriptionPlans() => (super.noSuchMethod(
            Invocation.method(
              #getSubscriptionPlans,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<Map<String, dynamic>>>>.value(
                _FakeEither_0<_i5.Failure, List<Map<String, dynamic>>>(
              this,
              Invocation.method(
                #getSubscriptionPlans,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<Map<String, dynamic>>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> handlePaymentCallback(
          Map<String, dynamic>? callbackData) =>
      (super.noSuchMethod(
        Invocation.method(
          #handlePaymentCallback,
          [callbackData],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #handlePaymentCallback,
            [callbackData],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}
